# Generated by Django 5.2.6 on 2025-10-08 00:19

import core.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Bateria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("nombre", models.CharField(max_length=120)),
                ("orden", models.PositiveIntegerField(default=1)),
            ],
            options={
                "ordering": ["programa_id", "orden", "id"],
            },
        ),
        migrations.CreateModel(
            name="BloqueDeFechas",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("nombre", models.CharField(max_length=150, unique=True)),
                ("fecha_inicio", models.DateField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Estudiante",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "email",
                    models.EmailField(
                        help_text="Correo Electrónico", max_length=254, unique=True
                    ),
                ),
                ("apellido", models.CharField(max_length=120)),
                ("nombre", models.CharField(max_length=120, verbose_name="Nombres")),
                ("dni", models.CharField(db_index=True, max_length=20, unique=True)),
                (
                    "cuit",
                    models.CharField(blank=True, max_length=20, verbose_name="CUIT"),
                ),
                (
                    "sexo",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Masculino", "Masculino"),
                            ("Femenino", "Femenino"),
                            ("Otro", "Otro"),
                        ],
                        max_length=20,
                    ),
                ),
                ("fecha_nacimiento", models.DateField(blank=True, null=True)),
                (
                    "pais_nacimiento",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Argentina", "Argentina"),
                            ("Bolivia", "Bolivia"),
                            ("Brasil", "Brasil"),
                            ("Chile", "Chile"),
                            ("Paraguay", "Paraguay"),
                            ("Uruguay", "Uruguay"),
                            ("Otro", "Otro"),
                        ],
                        max_length=60,
                    ),
                ),
                (
                    "pais_nacimiento_otro",
                    models.CharField(
                        blank=True,
                        max_length=120,
                        verbose_name="Otro País de Nacimiento",
                    ),
                ),
                (
                    "nacionalidad",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Argentina", "Argentina"),
                            ("Bolivia", "Bolivia"),
                            ("Brasil", "Brasil"),
                            ("Chile", "Chile"),
                            ("Paraguay", "Paraguay"),
                            ("Uruguay", "Uruguay"),
                            ("Otro", "Otro"),
                        ],
                        max_length=60,
                    ),
                ),
                (
                    "nacionalidad_otra",
                    models.CharField(
                        blank=True, max_length=120, verbose_name="Otra Nacionalidad"
                    ),
                ),
                (
                    "lugar_nacimiento",
                    models.CharField(
                        blank=True,
                        max_length=120,
                        verbose_name="Lugar de Nacimiento (Provincia)",
                    ),
                ),
                (
                    "domicilio",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Domicilio Particular"
                    ),
                ),
                ("barrio", models.CharField(blank=True, max_length=120)),
                ("ciudad", models.CharField(blank=True, max_length=120)),
                (
                    "telefono",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        validators=[core.models.validate_telefono],
                    ),
                ),
                (
                    "nivel_educativo",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Primaria Completa", "Primaria Completa"),
                            ("Secundaria Incompleta", "Secundaria Incompleta"),
                            ("Secundaria Completa", "Secundaria Completa"),
                            (
                                "Terciaria/Universitaria Incompleta",
                                "Terciaria/Universitaria Incompleta",
                            ),
                            (
                                "Terciaria/Universitaria Completa",
                                "Terciaria/Universitaria Completa",
                            ),
                        ],
                        max_length=60,
                        verbose_name="Nivel Alcanzado",
                    ),
                ),
                (
                    "estatus",
                    models.CharField(
                        choices=[
                            ("Regular", "Regular"),
                            ("Libre", "Libre"),
                            ("Baja", "Baja"),
                        ],
                        default="Regular",
                        max_length=10,
                        verbose_name="Estatus de Regularidad",
                    ),
                ),
                (
                    "posee_pc",
                    models.BooleanField(
                        default=False, verbose_name="Posee PC en su Domicilio"
                    ),
                ),
                (
                    "posee_conectividad",
                    models.BooleanField(
                        default=False, verbose_name="Posee Conectividad a Internet"
                    ),
                ),
                (
                    "puede_traer_pc",
                    models.BooleanField(
                        default=False, verbose_name="Puede Traer PC a Clase"
                    ),
                ),
                ("trabaja", models.BooleanField(default=False)),
                (
                    "lugar_trabajo",
                    models.CharField(
                        blank=True, max_length=120, verbose_name="Lugar de Trabajo"
                    ),
                ),
                (
                    "dni_digitalizado",
                    models.URLField(
                        blank=True,
                        max_length=500,
                        verbose_name="DNI digitalizado (Link)",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Programa",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("codigo", models.CharField(max_length=30, unique=True)),
                ("nombre", models.CharField(max_length=200)),
                ("activo", models.BooleanField(default=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Bloque",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("nombre", models.CharField(max_length=120)),
                ("orden", models.PositiveIntegerField(default=1)),
                (
                    "bateria",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bloques",
                        to="core.bateria",
                    ),
                ),
                (
                    "correlativas",
                    models.ManyToManyField(
                        blank=True, related_name="es_correlativa_de", to="core.bloque"
                    ),
                ),
            ],
            options={
                "ordering": ["bateria_id", "orden", "id"],
                "unique_together": {("bateria", "nombre")},
            },
        ),
        migrations.CreateModel(
            name="Cohorte",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("nombre", models.CharField(max_length=100, unique=True)),
                (
                    "bloque_fechas",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cohortes",
                        to="core.bloquedefechas",
                    ),
                ),
                (
                    "programa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cohortes",
                        to="core.programa",
                    ),
                ),
            ],
            options={
                "ordering": ["-bloque_fechas__fecha_inicio"],
            },
        ),
        migrations.CreateModel(
            name="Modulo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("nombre", models.CharField(max_length=120)),
                ("orden", models.PositiveIntegerField(default=1)),
                ("fecha_inicio", models.DateField(blank=True, null=True)),
                ("fecha_fin", models.DateField(blank=True, null=True)),
                ("es_practica", models.BooleanField(default=False)),
                (
                    "asistencia_requerida_practica",
                    models.PositiveIntegerField(default=80),
                ),
                (
                    "bloque",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modulos",
                        to="core.bloque",
                    ),
                ),
            ],
            options={
                "ordering": ["bloque_id", "orden", "id"],
                "unique_together": {("bloque", "nombre")},
            },
        ),
        migrations.CreateModel(
            name="Examen",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tipo_examen",
                    models.CharField(
                        choices=[
                            ("PARCIAL", "Parcial"),
                            ("RECUP", "Recuperatorio"),
                            ("FINAL_VIRTUAL", "Final Virtual"),
                            ("FINAL_SINC", "Final Sincrónico"),
                            ("EQUIVALENCIA", "Equivalencia"),
                        ],
                        max_length=15,
                    ),
                ),
                ("fecha", models.DateField(blank=True, null=True)),
                (
                    "peso",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "bloque",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="examenes",
                        to="core.bloque",
                    ),
                ),
                (
                    "modulo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="examenes",
                        to="core.modulo",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Asistencia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("fecha", models.DateField()),
                ("presente", models.BooleanField(default=False)),
                ("archivo_origen", models.CharField(blank=True, max_length=200)),
                (
                    "estudiante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="asistencias",
                        to="core.estudiante",
                    ),
                ),
                (
                    "modulo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="asistencias",
                        to="core.modulo",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Nota",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("calificacion", models.DecimalField(decimal_places=2, max_digits=5)),
                ("aprobado", models.BooleanField(default=False)),
                ("fecha_calificacion", models.DateTimeField(blank=True, null=True)),
                ("es_equivalencia", models.BooleanField(default=False)),
                ("origen_equivalencia", models.CharField(blank=True, max_length=255)),
                ("fecha_ref_equivalencia", models.DateField(blank=True, null=True)),
                (
                    "estudiante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notas",
                        to="core.estudiante",
                    ),
                ),
                (
                    "examen",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notas",
                        to="core.examen",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="bateria",
            name="programa",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="baterias",
                to="core.programa",
            ),
        ),
        migrations.CreateModel(
            name="SemanaConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("CLASE", "Clase"),
                            ("PARCIAL", "Parcial"),
                            ("FINAL_VIRTUAL", "Final Virtual"),
                            ("FINAL_SINC", "Final Sincrónico"),
                        ],
                        max_length=20,
                    ),
                ),
                ("orden", models.PositiveIntegerField()),
                (
                    "bloque",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="semanas_config",
                        to="core.bloquedefechas",
                    ),
                ),
            ],
            options={
                "ordering": ["bloque", "orden"],
            },
        ),
        migrations.CreateModel(
            name="Inscripcion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("INSCRIPTO", "Inscripto"),
                            ("ACTIVO", "Activo"),
                            ("PAUSADO", "Pausado"),
                            ("EGRESADO", "Egresado"),
                        ],
                        default="INSCRIPTO",
                        max_length=10,
                    ),
                ),
                (
                    "cohorte",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inscripciones",
                        to="core.cohorte",
                    ),
                ),
                (
                    "estudiante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inscripciones",
                        to="core.estudiante",
                    ),
                ),
                (
                    "modulo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inscripciones",
                        to="core.modulo",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["cohorte"], name="core_inscri_cohorte_723cf7_idx"
                    )
                ],
                "unique_together": {("estudiante", "cohorte", "modulo")},
            },
        ),
        migrations.AddIndex(
            model_name="examen",
            index=models.Index(
                fields=["modulo", "tipo_examen"], name="core_examen_modulo__8073fe_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="examen",
            index=models.Index(
                fields=["bloque", "tipo_examen"], name="core_examen_bloque__05b50b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="asistencia",
            index=models.Index(
                fields=["modulo", "fecha"], name="core_asiste_modulo__c9fea3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="asistencia",
            index=models.Index(
                fields=["estudiante", "modulo"], name="core_asiste_estudia_9b49b5_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="asistencia",
            unique_together={("estudiante", "modulo", "fecha")},
        ),
        migrations.AddIndex(
            model_name="nota",
            index=models.Index(
                fields=["examen", "estudiante"], name="core_nota_examen__a81d92_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="bateria",
            unique_together={("programa", "nombre")},
        ),
        migrations.AlterUniqueTogether(
            name="semanaconfig",
            unique_together={("bloque", "orden")},
        ),
    ]
